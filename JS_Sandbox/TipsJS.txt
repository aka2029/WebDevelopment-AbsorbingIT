-> REMEBER ONE THING SPECIALLY FOR AJAX AND ONWARDS, because of "Changes to Cross-Origin Requests in Chrome Extension Content Scripts" error so, using live server is essential. If the live server extension in VScode doesn't work then use npm live server [command: npm install -g live-server] and run on command prompt by the command "live-server"

-> JSON stands for JS OBJECT NOTATION and is very very similar to standart js object. 
Moreover, there are many online programs to validate JSON (EG. jsonlint.com)

-> you can do pretty much everything that you do in your js file from within your console.. it goes on refreshing and should be used for testing purposes.
-> For using the materialize, go to get started - then CDN - put both links provided in the code.... moreover, it also needs jQuery as a dependency.  Remember to add jQuery before materialize & fontawesome cdn after materialize. And index.js file at the end..... JUST DOING THIS WILL MAKE THE WORK A LOT SIMPLER AND IT REMOVED THE CSS WORK.
-> in Task List project, while deleting we have to delete multiple of them and they are dynamic so we have to use EVENT DELEGATION.
-> REMEMBER ONE THING - in JS unlike other programming languages the functions GET HOISTED ie they get put to the top, so we can call function before we can actually declare them.
-> (object literals) - This is fine when you want to deal with one object or one instance but if you want to create multiple instances of a certain type of object then you wanna create a constructor. If you wanna get into prototypes and inheritance and all that kind of stuff then you wanna know about it.
-> (event delegation) - if something is gonna show up more than once with the same class or something that is not there when the page loads, but is dynamically added then we use event delegation
-> Asynchronous JS and working with technologies like AJAX and FetchAPI... ajax and http requests are older tech but reliable but fetch is new
-> Synchronous is also called blocking code(57v)
-> Github has a very well built REST Api. Availabel at "developer.github.com" but the only problem is that it allows only 100 access a day, and if you want more than you need to register that app on github using the link "github.com/settings/applications/new" -> this will create your github key. Moreover, if you view the source code and click on github.js file you're gonna see the client id and client secret in a constructor. YOu won't want to put this in constructor & is not a good practice.
-> localStorage can only hold string by default, if we are passing array.. we'll have to turn it into a string(with JSON.stringify()) & if we need to pull it out into an object ( using JSON.parse())

READING RESOURCES SUGGESTED:
: To know the difference between the innerHTML and remove child "https://jsperf.com/innerhtml-vs-removechild/47" (Mainly recommended for Task list project)
: know the difference between event delegation and event bubbling
: know the difference between Objects, Object Literals and Template Literals.
: Inheritance and the prototype chain - Read this (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain)
: Know about CORS policy in detain. 

LINKS:
: using materialize in projects, just use the link on -> materializecss.com [Project: Task List]
: using bootstrap in projects, just use the getting starter link on -> getbootstrap.com [Project: Loan Calculator]
: using skeleton cdn in projects, just use the lind on skeleton.com [Project Number Gusser]
: using bootswatch in projects, just use the link or download the file and link it locally -> bootswatch.com [Project Github Finder]
: to validate JSON -> "https://jsonlint.com/"
: the internet chuck norris database (api's) -> "http://www.icndb.com/"
: Fake online REST API for testing and prototyping -> "https://jsonplaceholder.typicode.com/"
: GitHub has its own api -> "api.github.com"  but in 07_app.js we used "api.github.com/users"
: Weather Api -> "https://openweathermap.org/"
: The random user API, to have random, pics, emails, passwords etc -> "randomuser.me"
: To get fontawesome cdn for html, go to -> "bootstrapcdn.com/fontawesome"

THINGS THAT NEED A LOT OF MY ATTENTION:
1. e i.e event tag
2. JSON parsing & stringify when storing it in local storage
3. nodelist and array and string usage and when to convert
4. difference between mousedown, mouseup, click, etc etc